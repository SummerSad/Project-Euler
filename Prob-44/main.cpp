#include <stdio.h>
#include <stdlib.h>
#include <math.h>

//Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2
//Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
//and D = |Pk − Pj| is minimised; what is the value of D?

bool isPenta(int Pn)
{
	if(Pn < 1)
		return false;
	int n = ((int)sqrt(Pn * 6) + 1) / 3;
	return n * (3 * n - 1) / 2 == Pn;
}

void crePenta(int MAX, int *&P, int &size)
{
	int i, j;
	for(i = 1, j = 0; i * (3 * i - 1) / 2 <= MAX; i++)
	{
		P = (int *)realloc(P, sizeof(int) * (j + 1));
		P[j++] = i * (3 * i - 1) / 2;
	}
	size = j;
}

int findD(int MAX)
{
	int D = MAX;
	int *P = NULL;
	int size = 0;
	crePenta(MAX, P, size);
	for(int i = 0; i < size - 1; i++)
	{
		for(int j = i + 1; j < size; j++)
		{
			if(isPenta(P[j] + P[i]) && isPenta(P[j] - P[i]) && P[j] - P[i] < D)
				D = P[j] - P[i];
		}
	}
	free(P);
	return D;
}

int main()
{
	printf("%d\n", findD(10000000));
	return 0;
}
